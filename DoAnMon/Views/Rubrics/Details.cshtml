@model Rubric

@{
    ViewData["Title"] = "Details";
    Layout = null;
    List<Criterion>? criteriaList = ViewBag.Criteria as List<Criterion>;
    int criteriaLength = criteriaList == null ? 0 : criteriaList.Count;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Rubric Details</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
          rel="stylesheet"
          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
          crossorigin="anonymous" />
    <style>
        @@import url("https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@0,100..800;1,100..800&display=swap");

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: "JetBrains Mono", monospace;
        }

        .img_container {
            width: 100%;
        }

            .img_container > img {
                width: 400px;
                height: 130px;
                object-fit: fill;
            }

        .rubric_h2 {
            text-align: center;
            font-weight: bold;
            margin-bottom: 30px;
            text-transform: uppercase;
            margin-top: 5px;
        }

        .rubric_h6 {
            text-align: center;
            text-decoration: underline;
            font-size: 20px;
        }

        .custom-field-container {
            padding-bottom: 20px;
            width: 100%;
        }

        .rubric_label {
            font-weight: bold;
            margin-right: 5px;
            font-size: 16px;
        }

        .custom-input {
            margin-bottom: 10px;
            width: 90%;
            font-size: 16px;
            border: none;
            border-bottom: 1px solid #515151;
        }

            .custom-input:focus {
                outline: none;
            }

        hr {
            margin-top: 5px;
        }

        .add-btn {
            margin: 0 10px 10px 10px;
            width: 40px;
            height: 40px;
            background-color: transparent;
            border-radius: 5px;
            font-size: 30px;
            display: flex;
            justify-content: center; /* Căn giữa theo chiều ngang */
            align-items: center;
        }

            .add-btn:active {
                background-color: #b9b9b9;
            }

        .custom-label {
            align-content: center;
        }

        .button_container {
            display: flex;
            justify-content: space-between;
            margin: 0 20%;
        }

        .btn-controls {
            width: 100%;
            margin: 10px;
            border-radius: 15px;
            font-weight: bold;
            padding: 2px;
            border: none;
        }

        .table-info {
            width: 100%;
        }

        .custom-table thead th {
            background-color: #b9b9b9;
        }

        .custom-table {
            border-collapse: separate; /* Để các ô có thể giữ được viền riêng */
            border-spacing: 0; /* Loại bỏ khoảng cách giữa các ô */
            border-radius: 10px; /* Đặt độ bo góc */
            overflow: hidden; /* Đảm bảo nội dung bảng giữ bo góc */
        }

            .custom-table th,
            .custom-table td {
                border: 1px solid #000000; /* Đặt viền cho các ô */
            }

            .custom-table thead th:first-child {
                border-top-left-radius: 10px; /* Bo góc trên cùng bên trái */
            }

            .custom-table thead th:last-child {
                border-top-right-radius: 10px; /* Bo góc trên cùng bên phải */
            }

            .custom-table tbody tr:last-child td:first-child {
                border-bottom-left-radius: 10px; /* Bo góc dưới cùng bên trái */
            }

            .custom-table tbody tr:last-child td:last-child {
                border-bottom-right-radius: 10px; /* Bo góc dưới cùng bên phải */
            }

        .custom-tr {
            text-align: center;
            vertical-align: middle; /* Căn giữa theo chiều dọc */
        }

        .deleteRow {
            cursor: pointer;
        }

        .context-menu {
            background-color: #fff;
            border: 1px solid #ccc;
            padding: 5px;
            list-style: none;
            margin: 0;
            width: 130px;
            z-index: 1000;
            box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.2);
        }

            .context-menu li {
                padding: 8px 12px;
                cursor: pointer;
            }

                .context-menu li:hover {
                    background-color: #f5f5f5;
                }

    </style>
</head>
<body>
<div>
    <h2 class="rubric_h2" id="table_title">@Model.Name</h2>
    @*===========================================*@
    <table class="table table-bordered custom-table">
        <thead style="background-color: #E1E1E1;">
        <tr class="text-center custom-tr">
            <th style="align-content: center;" scope="col" rowspan="2">STT</th>
            <th style="align-content: center;" scope="col" rowspan="2">MSSV</th>
            <th style="align-content: center;" scope="col" rowspan="2">Họ Tên</th>
            <th scope="col" colspan="@criteriaLength">Các tiêu chí đánh giá</th>
            <th style="align-content: center;" scope="col" rowspan="2">Tổng Điểm</th>
        </tr>
            <tr class="text-center">
                @foreach (var criterion in ViewBag.Criteria)
                {
                    <th scope="col"
                        class="custom-solspan"
                        style="border-top-right-radius: 0px; border-top-left-radius: 0px">
                        @criterion.Title (@(Math.Round(criterion.Weight * 100, 0))%)
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            @{
                int index = 1;
                foreach (var student in (IEnumerable<Student>)ViewBag.Students)
                {
                    <tr>
                        <td style="border-bottom-left-radius: 0;">@index </td>
                        <td>@student.MSSV</td>
                        <td>@student.FullName</td>
                        @foreach (var criterion in (IEnumerable<Criterion>)ViewBag.Criteria)
                        {
                            var evaluation = student.Evaluations.FirstOrDefault(e => e.CriterionId == criterion.Id);
                            if (!ViewBag.IsOwner)
                            {
                                    <td>@(evaluation?.Score ?? 0)</td>
                            }
                            else
                            {
                                <td>
                                    <input type="number"
                                        value="@(evaluation?.Score ?? 0)"
                                        class="form-control score-input"
                                        data-student-id="@student.Id"
                                        data-criterion-id="@criterion.Id"
                                        min="0" max="10" step="0.5"
                                        style="border: none;"/>
                                </td>
                            }
                        }
                        <td class="total-score">@student.Evaluations.Sum(e => e.Score * e.Criterion.Weight)</td>
                    </tr>

                    index++;
                }
            }
        </tbody>
    </table>
    @* <a href="@Url.Action("Create", "Student",new { rubricId = Model.Id })" class="btn btn-primary">Thêm Sinh Viên</a> *@
    @*===========================================*@
</div>
@* <div class="button_container">
    <button class="btn-controls" style="background-color: #fdcedf" type="button" onclick="window.location.href='@Url.Action("Edit", "Rubrics", new {id = Model?.Id})'">
        Chỉnh sửa Rubric
    </button>
</div> *@

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>
<script>
    document.querySelectorAll('.score-input').forEach(input => {
        input.addEventListener('change', function() {
            const studentId = this.getAttribute('data-student-id');
            const criterionId = this.getAttribute('data-criterion-id');
            const newScore = this.value;

            // Gửi yêu cầu AJAX để cập nhật điểm
            fetch('/Student/UpdateScore', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    studentId: studentId,
                    criterionId: criterionId,
                    score: newScore
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Cập nhật lại điểm tổng trên bảng
                    const totalScoreElement = this.closest('tr').querySelector('.total-score');
                    totalScoreElement.textContent = data.newTotalScore;
                } else {
                    alert('Lỗi khi cập nhật điểm.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra.');
            });
        });
    });
</script>
</body>
</html>



