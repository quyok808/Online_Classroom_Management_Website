@using DoAnMon.IdentityCudtomUser
@using Microsoft.AspNetCore.Identity
@inject SignInManager<CustomUser> SignInManager
@inject UserManager<CustomUser> UserManager
@inject SignInManager<CustomUser> _signInManager

<style>
    .dropdown-menu {

        width: auto; /* Tự động điều chỉnh theo nội dung */
        min-width: 250px; /* Đặt chiều rộng tối thiểu */
        padding: 15px;
        margin-left:-230px;
        background: #fffacd; /* Màu vàng nhạt */
        border: 2px solid #f1c40f; /* Viền vàng đậm */
        border-radius: 8px;
        box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.2); /* Đổ bóng */
        text-align: left;
        font-size: 14px;
        color: #333;
        margin-top: 10px; /* Khoảng cách giữa icon và dropdown */
        z-index: 1050;
    }

        /* Mũi nhọn cho dropdown */
        .dropdown-menu::after {
            content: '';
            position: absolute;
            top: -10px; /* Đặt phía trên khung */
            left: 90%; /* Căn giữa theo icon */
            transform: translateX(-50%);
            width: 0;
            height: 0;
            border-style: solid;
            border-width: 0 10px 10px 10px; /* Kích thước mũi nhọn */
            border-color: transparent transparent #f1c40f transparent; /* Màu khớp với viền */
        }

    /* Loại bỏ nền mặc định của Bootstrap */
    .dropdown-item {
        color: black;
        padding: 0; /* Khoảng cách trong từng mục */
        font-size: 14px;
        background: transparent;
        border: none;
    }

    /* Tăng khoảng cách và điều chỉnh nút */
    .nav-link {
        padding:0;
    }

    button {
        all: unset; /* Xóa định dạng mặc định */
        cursor: pointer;
        font-size: 14px;
    }

    .dropdown-menu .dropdown-item a {
        display: block;
        padding-bottom: 10px;
        color: black;
        text-decoration: none;
        font-size:14px;
        padding-left:0;
    }

</style>

@{
    var user = await UserManager.GetUserAsync(User);
}

<ul style="list-style: none; padding: 0; margin: 0;">
    @if (SignInManager.IsSignedIn(User) && user != null)
    {
        <li class="nav-item dropdown">
            @* Icon dropdown *@
            <a class="nav-link dropdown-toggle text-dark" id="userDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <i class="fas fa-user"></i>
            </a>
            @* Nội dung dropdown *@
            <div class="dropdown-menu" aria-labelledby="userDropdown">
                <div class="dropdown-item">
                    <p >MSSV: @user.Mssv</p>
                    <p style="white-space: nowrap;">Email: @user.Email</p>
                    <a asp-area="Identity" asp-page="/Account/Manage/ChangePassword" title="Manage">Đổi mật khẩu</a>
                </div>
                <form class="form-inline dropdown-item" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button>
                        <i class="fas fa-sign-out-alt"></i> Logout
                    </button>
                </form>
                @if (User.IsInRole("Admin"))
                {
                    <div class="dropdown-item">
                        <a href="/Admin/Home/PhanQuyen"><i class="fas fa-tools"></i> Quản lí người dùng</a>
                        <a href="/Admin/Home/DSbaipost">Bài post</a>
                    </div>
                }
            </div>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Index">
                <i class="fas fa-user"></i>
            </a>
        </li>
    }
</ul>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var dropdowns = document.querySelectorAll('.dropdown-toggle');
        dropdowns.forEach(function (dropdown) {
            dropdown.addEventListener('click', function (event) {
                event.preventDefault();
                event.stopPropagation();
                var menu = this.nextElementSibling;
                menu.classList.toggle('show');
            });
        });

        document.addEventListener('click', function () {
            dropdowns.forEach(function (dropdown) {
                var menu = dropdown.nextElementSibling;
                if (menu.classList.contains('show')) {
                    menu.classList.remove('show');
                }
            });
        });

        var menus = document.querySelectorAll('.dropdown-menu');
        menus.forEach(function (menu) {
            menu.addEventListener('click', function (event) {
                event.stopPropagation();
            });
        });
    });
</script>
