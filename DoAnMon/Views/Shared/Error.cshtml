@model ErrorViewModel
@{
    ViewData["Title"] = "Error";
    Layout = null;
}

<style>
    body {
        margin: 0;
        font-family: 'Arial', sans-serif;
        background: linear-gradient(120deg, #f093fb, #f5576c);
        color: #fff;
        text-align: center;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
    }
    .error-container {
        text-align: center;
    }
    .error-code {
        font-size: 8rem;
        font-weight: bold;
        line-height: 1;
        margin: 0;
    }
    .error-message {
        font-size: 1.5rem;
        margin: 20px 0;
    }
    .error-description {
        font-size: 1rem;
        margin: 10px 0 30px;
    }
    .back-home {
        display: inline-block;
        padding: 10px 20px;
        font-size: 1rem;
        font-weight: bold;
        color: #f5576c;
        background: #fff;
        border: none;
        border-radius: 5px;
        text-decoration: none;
        transition: 0.3s;
    }
    .back-home:hover {
        background: #f093fb;
        color: #fff;
    }
    .animated-bg {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: radial-gradient(circle, rgba(255,255,255,0.2) 20%, transparent 50%);
        animation: move-bg 5s infinite;
    }
    @@keyframes move-bg {
        0% {
            transform: translate(-50px, -50px);
        }
        50% {
            transform: translate(50px, 50px);
        }
        100% {
            transform: translate(-50px, -50px);
        }
    }
</style>
<div class="error-container">
    <div><img src="/images/error.gif" width="200px" height="200px"/></div>
    <h2 class="text-danger"> Oops! An error occurred while processing your request.</h2>
    @if (Model.ShowRequestId)
    {
        <p>
            <strong>Request ID:</strong> <code>@Model.RequestId</code>
        </p>
    }
    <div class="error-description">
        <h3>Development Mode</h3>
        <p>
            Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
        </p>
        <p>
            <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
            It can result in displaying sensitive information from exceptions to end users.
            For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
            and restarting the app.
        </p>
    </div>
    <a href="/" class="back-home">Go Back to Home</a>
</div>


