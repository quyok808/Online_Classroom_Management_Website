@using DoAnMon.IdentityCudtomUser
@using Microsoft.AspNetCore.Identity
@using static DoAnMon.Models.ClassroomViewModel
@inject UserManager<CustomUser> _userManager
@model IEnumerable<DoAnMon.Models.Message>
<style>
      li {
        display: flex;
        margin: 15px 0;
    }

    .message-box {
         display: inline-block;
         max-width: 763px;
         border-radius: 10px;
         padding: 10px;
         background-color: #FBEAF0;
         margin-left: 15px
     }

     .current-user {
         justify-content: flex-end; 
         align-items: flex-end;
         margin-left: auto; 
     }

     .other-user {
         justify-content: flex-start;
         align-items: flex-start;
        
     }

     /* Ẩn nền và ảnh lớn */
.modal-zoomImage {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    justify-content: center;
    align-items: center;
}

.modal-zoomImage img {
    max-width: 90%;
    max-height: 90%;
    border: 2px solid white;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);
    animation: fadeIn 0.3s ease-in-out;
}

/* Hiệu ứng fade-in */
@@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

/* Đóng modal */
.modal-zoomImage-close {
    position: absolute;
    top: 20px;
    right: 20px;
    color: white;
    font-size: 24px;
    cursor: pointer;
    font-weight: bold;
}

/* Media Queries for responsiveness */
@@media (max-width: 768px) {
    .message-box {
        width: calc(100% - 60px); /* Adjust message-box width for smaller screens */
        padding: 8px;
    }

    .message-box h3 {
        font-size: 14px; /* Shrink title font size */
    }

    .message-box p {
        font-size: 12px; /* Shrink content font size */
    }
}

@@media (max-width: 480px) {
    .message-box {
        width: calc(100% - 60px); /* Ensure message-box fits on small screens */
        padding: 6px;
    }

    .message-box h3 {
        font-size: 11px; /* Further shrink title font size */
    }

    .message-box p {
        font-size: 9px; /* Further shrink content font size */
    }
}
</style>
@{
    List<Message>? listmsg = Model.ToList();
    var currentUserId = _userManager.GetUserId(User);
}
<div id="list_mess">
@for (int i = 0; i < listmsg.Count; i++)
{
    var chat = listmsg[i];
    var chattinguser = _userManager.FindByIdAsync(chat.UserId).Result;

    if (chattinguser != null) // Kiểm tra nếu tìm thấy người dùng
    {
        var alignmentClass = chat.UserId == currentUserId ? "current-user" : "other-user";

        <li class="@alignmentClass" style="font-family: 'JetBrains Mono', serif; ">
            @if (alignmentClass == "other-user")
            {
                <div class="avatar" style="width: 50px; height: 50px; background-color: #ddd; border-radius: 50%; text-align: center; line-height: 40px; margin-left: 10px; font-size: 18px; font-weight: bold; color: #555;">
                    <img src="/Imgs_avtUser/@chattinguser.UrlAvt"
                         alt="Avatar"
                         style="width: 100%; height: 100%; object-fit: cover;border-radius: 50%">
                </div>
            }
            <div class="message-box">
                <h3 style="font-size: 18px;font-weight:600;margin:0;">@chattinguser.Mssv - @chattinguser.Name</h3>
                <p style="font-size: 17px;margin:0;">@chat.Noidung</p>
                @if (!string.IsNullOrEmpty(chat.FilePath))
                {
                    var fileExtension = System.IO.Path.GetExtension(chat.FilePath).ToLower();
                    var imageExtensions = new[] { ".jpg", ".jpeg", ".png", ".gif", ".bmp", ".tiff", ".webp" };

                    if (imageExtensions.Contains(fileExtension))
                    {
                        <img src="@Url.Content(chat.FilePath)" alt="Image" class="zoomable-image" style="width: 350px; height: auto;" />
                    }
                    else
                    {
                        <a href="@Url.Content(chat.FilePath)" target="_blank">[Download File]</a>
                    }
                }

                <p style="font-size: 13px; margin-top: 5px;margin:0;">(@chat.Time)</p>
            </div>                  
        </li>
    }
}
</div>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const modal = document.createElement('div');
        modal.className = 'modal-zoomImage';
        modal.innerHTML = `
            <span class="modal-zoomImage-close">&times;</span>
            <img src="" alt="Full-size Image">
        `;
        document.body.appendChild(modal);

        const zoomableImages = document.querySelectorAll('.zoomable-image');
        const modalImg = modal.querySelector('img');
        const modalClose = modal.querySelector('.modal-zoomImage-close');

        // Khi click vào hình thu nhỏ
        zoomableImages.forEach(img => {
            img.addEventListener('click', () => {
                modal.style.display = 'flex';
                modalImg.src = img.src;
            });
        });

        // Khi đóng modal
        modalClose.addEventListener('click', () => {
            modal.style.display = 'none';
        });

        // Đóng modal khi click ra ngoài ảnh
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                modal.style.display = 'none';
            }
        });
    });

    window.onload = function () {
        console.log("Page loaded");
        setTimeout(scrollToBottom, 100);  // Delay để đảm bảo DOM đã sẵn sàng
    };

    function scrollToBottom() {
        const messageList = document.getElementById("list_mess");
        if (messageList) {
            messageList.scrollTop = messageList.scrollHeight;
            console.log("Scrolled to bottom");
        } else {
            console.error("Message list element not found");
        }
    }

</script>





