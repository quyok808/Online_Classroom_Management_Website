@using DoAnMon.IdentityCudtomUser
@using Microsoft.AspNetCore.Identity
@inject SignInManager<CustomUser> SignInManager
@inject UserManager<CustomUser> UserManager
@inject SignInManager<CustomUser> _signInManager
@using static DoAnMon.Models.ClassroomViewModel
@model List<ClassRoomViewModel>

@{
	ViewData["Title"] = "Classrooms";
	Layout = "~/Views/Shared/_Layout.cshtml";
    var user = await UserManager.GetUserAsync(User);
}

<style>
    .left-column_indexClassroom {
        width: 20%;
        border: 1px solid #ddd;
    }

    .btn-custom-indexControl{
        width: 85%;
        border-radius: 0 30px 30px 0;
        text-align: left;
        font-family: "Lobster", serif;
        font-size: 20px;
        margin-top: 5px;
    }

    .btn-custom-indexControl:focus, .btn-custom-indexControl:active:focus{
        outline: 2px solid blue;
    }

    .QR-container{
        display: grid;
        place-content: center;
        height: 80%;
    }

    #classroomList {
        min-height: 500px;
        overflow-y: auto;
    }

    .classrooms-content {
        padding: 20px;
        background-color: #fff;
        display: flex;
    }

    .classroom{
        height: fit-content;
    }

    /* From Uiverse.io by vamsidevendrakumar */
    .card-item {
        width: 290px;
        height: 200px;
        perspective: 1000px;
        margin: 0 auto;
    }

    .card-inner {
        width: 100%;
        height: 100%;
        position: relative;
        transform-style: preserve-3d;
        transition: transform 0.999s;
    }

    .card-item:hover .card-inner {
        transform: rotateY(180deg);
    }

    .card-front,
    .card-back {
        position: absolute;
        width: 100%;
        height: 100%;
        backface-visibility: hidden;
    }

    .card-front {
        background-color: #6A2C70;
        color: #fff;
        display: flex;
        align-items: center;
        border: 5px solid #000;
        border-radius: 10px;
        justify-content: center;
        font-size: 24px;
        transform: rotateY(0deg);
        overflow: hidden; /* Đảm bảo hình ảnh không tràn ra ngoài */
    }

    .card-back {
        background-color: #F08A5D;
        color: #fff;
        display: flex;
        align-items: center;
        border: 10px solid #F08A5D;
        border-radius: 10px;
        justify-content: center;
        font-size: 24px;
        transform: rotateY(180deg);
    }

    .card-front img {
        width: 100%;
        height: 100%;
        object-fit: cover; /* Đảm bảo hình ảnh bao phủ toàn bộ mà không méo */
        border-radius: 5px; /* Bảo toàn bo góc */
        position: absolute; /* Giúp ảnh phủ toàn bộ card-front */
    }

    .card-header{
        font-size: 14px;
    }

    .card-title{
        font-size: 24px;
        font-weight: bold;
        display: inline-block; /* Hiển thị inline trong button */
        max-width: 270px; /* Giới hạn chiều rộng */
        overflow: hidden; /* Cắt bớt nội dung tràn */
        white-space: nowrap; /* Không xuống dòng */
        text-overflow: ellipsis; /* Thêm dấu '...' khi bị cắt */
        vertical-align: middle; /* Canh giữa văn bản nếu cần */
    }

    .card-text{
        font-size: 16px;
    }

    .card-text {
        display: -webkit-box; /* Sử dụng flexbox ẩn với Webkit */
        -webkit-line-clamp: 3; /* Giới hạn tối đa 3 dòng */
        -webkit-box-orient: vertical; /* Cài đặt hướng dọc */
        overflow: hidden; /* Ẩn phần nội dung bị thừa */
        text-overflow: ellipsis; /* Thêm dấu ba chấm nếu bị cắt */
        max-width: 280px;
        max-height: calc(1.5em * 3); /* Giới hạn chiều cao tương ứng với số dòng */
        line-height: 1.5em; /* Chiều cao dòng để tính toán chính xác */
    }

    .classrooms-content{
        display: grid; /* Sử dụng Grid Layout */
        grid-template-columns: repeat(4, 1fr); /* 4 cột có chiều rộng bằng nhau */
        gap: 20px; /* Khoảng cách giữa các thẻ */
        font-family: "JetBrain Mono", serif;
    }

    .classroomList_Leftside{
        overflow-y: auto;
        max-height: 220px;
    }

    .text-ellipsis {
        display: inline-block; /* Hiển thị inline trong button */
        max-width: 220px; /* Giới hạn chiều rộng */
        overflow: hidden; /* Cắt bớt nội dung tràn */
        white-space: nowrap; /* Không xuống dòng */
        text-overflow: ellipsis; /* Thêm dấu '...' khi bị cắt */
        vertical-align: middle; /* Canh giữa văn bản nếu cần */
    }

    .null_Classroom{
        display: grid;
        place-items: center;
    }

    .notification-count {
        position: absolute;
        top: -19px; /* Điều chỉnh vị trí của số lượng */
        right: -8px; /* Điều chỉnh vị trí của số lượng */
        background-color: red;
        color: white;
        font-size: 12px;
        width: 18px;
        height: 18px;
        border-radius: 50%;
        text-align: center;
        line-height: 18px;
    }

    @@media (max-width: 768px) {
        .classrooms-content {
            grid-template-columns: repeat(2, 1fr); /* Hiển thị 2 thẻ trên dòng khi màn hình nhỏ */
        }
    }
    @@media (max-width: 480px) {
        .classrooms-content {
            grid-template-columns: 1fr; /* Hiển thị 1 thẻ trên dòng khi màn hình rất nhỏ */
        }
    }
</style>
<div class="container-classrooms-trangchinh" style="margin-top: 80px;display: flex;min-height: 500px;">
   <div class="left-column_indexClassroom">
        <button type="button" class="btn btn-light btn-custom-indexControl" onclick="location.href='/ClassRooms'"><i class="fa-solid fa-house-chimney fa-xl" style="color: #000; margin-right: 30px;"></i> Màn hình chính</button>
        <button type="button" class="btn btn-light btn-custom-indexControl" onclick="location.href='/Notifications'">
            <i class="fa-solid fa-bell fa-xl" style="color: #000; margin-right: 35px; position: relative;">
                @{
                    if (ViewBag.listNotiNew > 0)
                    {
                        <span class="notification-count" id="noti_count">@ViewBag.listNotiNew</span>
                    } else
                    {
                        <span class="notification-count" id="noti_count" style="display: none;"></span>
                    }
                }
            </i>
            Thông báo mới 
        </button>
        @if (User.IsInRole("Teacher") || User.IsInRole("Admin"))
         {
            <button type="button" class="btn btn-light btn-custom-indexControl" onclick="location.href='/ClassRooms/Create'"><i class="fa-solid fa-plus fa-xl" style="color: #000; margin-right: 35px;"></i> Tạo lớp mới</button>
         }
        <button data-toggle="modal" data-target="#JoinModal" type="button" class="btn btn-light btn-custom-indexControl"><img src="https://cdn-icons-png.flaticon.com/512/12366/12366453.png" alt="Alternate Text" width="33.75px" height="35px" style="margin-right:26px; " /> Tham gia lớp học</button>
        <hr style="border-top: 2px solid #ddd; margin: 10px 0 auto;" />
        <div class="btn btn-light btn-custom-indexControl">
            <img src="~/images/group.gif" alt="Alternate Text" width="40px" height="40px">
            Lớp học đang tham gia
        </div>
        <div class="classroomList_Leftside">
            @{
                if (Model != null)
                {
                    @foreach (var viewModel in Model)
                    {
                        <button type="button" class="btn btn-light btn-custom-indexControl text-ellipsis" onclick="location.href='/ClassRooms/Details/@viewModel.ClassRoom.Id'"><img src="~/Imgs_avtUser/@viewModel.Owner.UrlAvt" style="border-radius: 50px;" width="32px" height="32px" alt="Class Image" /> @viewModel.ClassRoom.Name</button>
                    }

                }
            }
        </div>
    </div>
    <!-- Modal join-->
    <div class="modal fade" id="JoinModal" tabindex="-1" role="dialog" aria-labelledby="JoinModelLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="JoinModelLabel" style="font-family: 'Itim', serif; letter-spacing: 2px;">THAM GIA LỚP HỌC</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="container text-center" style="width: 100%;">
                        <div class="row row-cols-2" style="display: flex;">
                            <div class="col" style="width: 50%; border-right: 1px solid #B4B4B8;">
                                <h4 style="font-family: 'Itim', serif; font-weight: bold;">Tham gia bằng mã lớp học</h4>
                                <form id="joinRoomForm" action="/ClassRooms/JoinClassV1" method="post">
                                    <div class="col-md-12" style="width: 100%">
                                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                        <div class="form-group">
                                            <label for="ClassRoomId" class="control-label" style="color: black; text-align: left; display: block; margin:10px 0; font-family: 'Itim', serif; font-weight: normal;">Mã lớp học:</label>
                                            <input name="ClassRoomId" id="ClassRoomId" class="form-control custom-input-width" required />
                                            <span id="ClassRoomIdError" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="modal-footer" style="border-top: 1px solid #e5e5e5; padding-top: 10px">
                                        <input style="font-size: 16px; font-weight:bold; width: 100%; font-family: 'Itim', serif; letter-spacing: 2px; background-color: #B3E5BE; color: #52575D" type="submit" value="Tham gia" class="btn btn-primary" />
                                    </div>
                                </form>
                            </div>
                            <div class="col" style="width: 50%; border-left: 1px solid #B4B4B8;">
                                <h4 style="font-family: 'Itim', serif; font-weight: bold;">Tham gia bằng mã QR</h4>
                                <div class="QR-container">
                                    <button id="scanButton" style="font-family: 'Itim', serif;">
                                        <video width="128" height="128" preload="none" style="background: transparent  url('https://cdn-icons-png.flaticon.com/512/7994/7994392.png') 50% 50% / fit no-repeat;" autoplay="autoplay" loop="true" muted="muted" playsinline="">
                                            <source src="https://cdn-icons-mp4.flaticon.com/512/7994/7994392.mp4" type="video/mp4">
                                        </video>
                                    </button>
                                    <div id="cameraModal" class="modal">
                                        <div class="modal-content" style="align-items: center;justify-content: center; width: 100%; height: 100%">
                                            <span class="close">&times;</span>
                                            <video id="qrScanner" width="100%" height="90%" autoplay style="align-items: center;justify-content: center; object-fit: cover;"></video>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" style="font-family: 'Itim', serif" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div class="main-content" style="flex: 1;">
        @{
            if (Model != null)
            {
                if (Model.Count > 0)
                {
                    <div id="classroomList" class="classrooms-content">
                        @foreach (var viewModel in Model)
                        {
                            //  <a href="@viewModel.ClassRoom.RoomOnline&User=@user.Id&class=@viewModel.ClassRoom.Id" id="diemDanhBtn" data-class-id="@viewModel.ClassRoom.Id" class="btn btn-primary btn-info btn-custom" target="_blank" style="font-family: Poppins, sans-serif; font-size: 14px;font-weight: 600;">Giảng đường</a>

                            //Card hiển thị lớp
                            <div class="card-item" data-id="@viewModel.ClassRoom.Id">
                                <div class="card-inner">
                                    <div class="card-front">
                                        <img src="~/images/@viewModel.ClassRoom.backgroundUrl" class="card-img" alt="Front Image">
                                    </div>
                                    <div class="card-back">
                                        <div class="card">
                                            <div class="card-header">
                                                <strong>GV giảng dạy: </strong>@viewModel.Owner.Name
                                            </div>
                                            <hr style="border-top: 2px solid #ddd; margin: 0" />
                                            <div class="card-body">
                                                <h5 class="card-title">@viewModel.ClassRoom.Name</h5>
                                                <p class="card-text">@viewModel.ClassRoom.Description</p>
                                                <a asp-action="Details" asp-route-id="@viewModel.ClassRoom.Id" class="btn btn-primary" style="float: right;">Vào lớp</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="null_Classroom">
                        <img src="~/images/null_Classroom_Index.gif" width="600px" height="400px" alt=" Null Classroom" />
                        <h3 style="font-family: 'Itim', serif; font-size: 25px; margin-top: -50px;">Hiện tại bạn đang không tham gia lớp học nào !!!</h3>
                    </div>
                }
            } 
        }
        
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popperjs/core@1.16.1/dist/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.14.0/Sortable.min.js"></script>


@if (!string.IsNullOrEmpty(ViewBag.StatusMessage))
{
    <script>alert('@ViewBag.StatusMessage');</script>
}
<script>

    function toggleOptions() {
        var plusButton = document.getElementById("plus-button");
        var options = document.getElementById("class-options-container");
        options.classList.toggle("hidden");

    }

    function hideOptions() {
        var joinFrame = document.getElementById("join-frame");
        joinFrame.classList.remove("hidden");
    }

    function showJoinFrame() {
        hideOptions();
    }
</script>
<script>
    $(document).ready(function () {
        $("#btnAddRoom").click(function () {
            $("#addRoomModal").modal('show');
        });


        $(".btn-info").click(function () {
            $(this).closest("tr").find(".room-description").toggle();
        });
    });
</script>
<script>
    $(document).ready(function () {
        $('#scanButton').click(function () {
            // Hiển thị modal
            $('#cameraModal').css('display', 'block');

            // Bắt đầu quét mã QR khi modal được mở
            startQRScanning();
        });

        // Đóng modal khi nhấn vào nút đóng hoặc nút close
        $('.close').click(function () {
            $('#cameraModal').css('display', 'none');
            stopQRScanning();
        });

        // Đóng modal khi nhấn ESC
        $(document).keyup(function (e) {
            if (e.key === "Escape") { // escape key maps to keycode `27`
                $('#cameraModal').css('display', 'none');
                stopQRScanning();
            }
        });
    });

    function startQRScanning() {
        const video = document.getElementById('qrScanner');

        // Truy cập vào camera và stream video
        navigator.mediaDevices.getUserMedia({ video: { facingMode: 'environment' } })
            .then(stream => {
                video.srcObject = stream;
                video.setAttribute('playsinline', true);
                video.play();
                // Bắt đầu quét mã QR
                tick();
            });

        function tick() {
            if (video.readyState === video.HAVE_ENOUGH_DATA) {
                const canvas = document.createElement('canvas');
                const ctx = canvas.getContext('2d');

                canvas.width = video.videoWidth;
                canvas.height = video.videoHeight;
                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);
                const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
                const code = jsQR(imageData.data, imageData.width, imageData.height);
                if (code) {
                    // Hiển thị nội dung mã QR trong cửa sổ thông báo (alert)
                    Swal.fire({
                        title: 'QR Code content',
                        text: code.data,
                        icon: 'success',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    // Gọi hàm để xử lý dữ liệu mã QR
                    savedata(code.data);
                    stopQRScanning();
                }
            }
            // Lặp lại quét mã QR
            requestAnimationFrame(tick);
        }
    }

    function stopQRScanning() {
        const video = document.getElementById('qrScanner');
        const stream = video.srcObject;
        const tracks = stream.getTracks();

        tracks.forEach(track => track.stop());
        video.srcObject = null;
    }

    function savedata(qrData) {
        // Gửi dữ liệu mã QR đến server để lưu trữ
        $.ajax({
            url: '/ClassRooms/JoinClassWithQRCode',
            type: 'POST',
            data: { qrData: qrData },
            success: function (response) {
                if (response.success) {
                    // Chuyển hướng hoặc hiển thị thông báo thành công
                    window.location.href = '/ClassRooms';
                } else {
                    // Hiển thị thông báo lỗi nếu cần
                    alert('Có lỗi xảy ra: ' + response.error);
                }
            },
            error: function (xhr, status, error) {
                // Xử lý lỗi nếu cần
                console.error('Error:', error);
            }
        });
    }
</script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('#diemDanhBtn').on('click', function (event) {
            event.preventDefault(); // Prevent the default link action
            var classId = $(this).data('class-id');
            var roomOnlineUrl = $(this).attr('href');
            var ajaxUrl = '@Url.Action("DiemDanhIn", "ClassRooms")';

            $.post("/ClassRooms/DiemDanhIn", { classId: classId }, function (data) {
                if (data.success) {
                    console.log('Điểm danh thành công');
                    window.open(roomOnlineUrl, '_blank');
                }
                else {
                    console.log(data.error);
                    alert(data.error);
                    console.log('Điểm danh thất bại');
                }
            });
        });
    });
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var sortable = new Sortable(document.getElementById('classroomList'), {
            animation: 150,
            scroll: true, // Bật tính năng cuộn tự động
            scrollSensitivity: 30, // Độ nhạy của việc cuộn (càng lớn thì cuộn càng nhanh)
            scrollSpeed: 10, // Tốc độ cuộn
            onEnd: function (evt) {
                // Get the new order of classroom IDs
                var order = sortable.toArray();
                // Send the new order to the server
                fetch('/ClassRooms/UpdateOrder', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'  // Include Anti-Forgery Token if necessary
                    },
                    body: JSON.stringify(order)
                }).then(response => {
                    if (response.ok) {
                        console.log('Order updated successfully');
                    } else {
                        console.error('Failed to update order');
                    }
                }).catch(error => {
                    console.error('Error:', error);
                });
            }
        });
    });
</script>



